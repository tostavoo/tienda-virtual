datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  admin
  cliente
}

enum OrderStatus {
  pendiente
  enviado
  entregado
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  phone     String?  @db.VarChar(32)
  role      Role     @default(cliente)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  addresses Address[]
  cart      Cart?
  orders    Order[]
}

model Address {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  label      String?  @db.VarChar(80)
  recipient  String   @db.VarChar(120)
  phone      String?  @db.VarChar(32)
  country    String   @default("Colombia") @db.VarChar(80)
  department String   @db.VarChar(80)
  city       String   @db.VarChar(80)
  street     String   @db.VarChar(255)
  extraInfo  String?  @db.VarChar(255)
  isDefault  Boolean  @default(false)
  createdAt  DateTime @default(now())

  // back-relation para Order.address
  orders Order[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(120)
  slug String @unique @db.VarChar(140)

  products Product[]
}

model Product {
  id               Int      @id @default(autoincrement())
  category         Category @relation(fields: [categoryId], references: [id])
  categoryId       Int
  name             String   @db.VarChar(160)
  slug             String   @unique @db.VarChar(180)
  shortDescription String?  @db.VarChar(220)
  active           Boolean  @default(true)
  discountPercent  Decimal? @db.Decimal(5, 2)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  variants ProductVariant[]
  images   ProductImage[]

  // back-relations necesarios
  cartItems  CartItem[]
  orderItems OrderItem[]
}

model ProductVariant {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  sku       String?  @db.VarChar(64)
  color     String?  @db.VarChar(60)
  size      String?  @db.VarChar(60)
  priceCent Int      @default(0)
  stock     Int      @default(0)
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cartItems  CartItem[]
  orderItems OrderItem[]
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  url       String   @db.VarChar(255)
  sortOrder Int      @default(0)
  createdAt DateTime @default(now())
}

model Settings {
  id                Int     @id
  taxPercent        Decimal @default(19.00) @db.Decimal(5, 2)
  shippingFixedCent Int     @default(0)
}

model Cart {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  items CartItem[]
}

model CartItem {
  id            Int            @id @default(autoincrement())
  cart          Cart           @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId        Int
  product       Product        @relation(fields: [productId], references: [id])
  productId     Int
  variant       ProductVariant @relation(fields: [variantId], references: [id])
  variantId     Int
  qty           Int            @default(1)
  unitPriceCent Int            @default(0)
  createdAt     DateTime       @default(now())
}

model Order {
  id           Int         @id @default(autoincrement())
  user         User        @relation(fields: [userId], references: [id])
  userId       Int
  address      Address     @relation(fields: [addressId], references: [id])
  addressId    Int
  status       OrderStatus @default(pendiente)
  subtotalCent Int         @default(0)
  discountCent Int         @default(0)
  taxCent      Int         @default(0)
  shippingCent Int         @default(0)
  totalCent    Int         @default(0)
  notes        String?     @db.VarChar(255)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  items OrderItem[]
}

model OrderItem {
  id            Int            @id @default(autoincrement())
  order         Order          @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId       Int
  product       Product        @relation(fields: [productId], references: [id])
  productId     Int
  variant       ProductVariant @relation(fields: [variantId], references: [id])
  variantId     Int
  nameSnapshot  String         @db.VarChar(160)
  colorSnapshot String?        @db.VarChar(60)
  sizeSnapshot  String?        @db.VarChar(60)
  qty           Int
  unitPriceCent Int
  lineTotalCent Int
}
