datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  admin
  cliente
}

enum OrderStatus {
  pendiente
  enviado
  entregado
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  phone     String?
  role      Role     @default(cliente)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  addresses Address[]
  cart      Cart?
  orders    Order[]
}

model Address {
  id         Int      @id @default(autoincrement())
  user       User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId     Int
  label      String?
  recipient  String
  phone      String?
  country    String   @default("Colombia")
  department String
  city       String
  street     String
  extraInfo  String?
  isDefault  Boolean  @default(false)
  createdAt  DateTime @default(now())

  // back-relation para Order.address
  orders Order[]
}

model Category {
  id   Int    @id @default(autoincrement())
  name String
  slug String @unique

  products Product[]
}

model Product {
  id               Int      @id @default(autoincrement())
  category         Category @relation(fields: [categoryId], references: [id])
  categoryId       Int
  name             String
  slug             String   @unique
  shortDescription String?
  active           Boolean  @default(true)
  discountPercent  Decimal?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  variants ProductVariant[]
  images   ProductImage[]

  // back-relations existentes
  cartItems  CartItem[]
  orderItems OrderItem[]

  // NEW: back-relation para compras
  purchaseItems PurchaseItem[]
}

model ProductVariant {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  sku       String?
  color     String?
  size      String?
  priceCent Int      @default(0)
  stock     Int      @default(0)
  active    Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // back-relations existentes
  cartItems  CartItem[]
  orderItems OrderItem[]

  // NEW: costo promedio vigente
  costCent Int @default(0)

  // NEW: back-relation para compras
  purchaseItems PurchaseItem[]
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  url       String
  sortOrder Int      @default(0)
  createdAt DateTime @default(now())
}

model Settings {
  id                Int     @id
  taxPercent        Decimal @default(19.00)
  shippingFixedCent Int     @default(0)
}

model Cart {
  id        Int      @id @default(autoincrement())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int      @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  items CartItem[]
}

model CartItem {
  id            Int            @id @default(autoincrement())
  cart          Cart           @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId        Int
  product       Product        @relation(fields: [productId], references: [id])
  productId     Int
  variant       ProductVariant @relation(fields: [variantId], references: [id])
  variantId     Int
  qty           Int            @default(1)
  unitPriceCent Int            @default(0)
  createdAt     DateTime       @default(now())
}

model Order {
  id           Int         @id @default(autoincrement())
  user         User        @relation(fields: [userId], references: [id])
  userId       Int
  address      Address     @relation(fields: [addressId], references: [id])
  addressId    Int
  status       OrderStatus @default(pendiente)
  subtotalCent Int         @default(0)
  discountCent Int         @default(0)
  taxCent      Int         @default(0)
  shippingCent Int         @default(0)
  totalCent    Int         @default(0)
  notes        String?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  // NEW: si en ventas llegaran a practicar retefuente
  retefuenteCent Int @default(0)

  items OrderItem[]
}

model OrderItem {
  id            Int            @id @default(autoincrement())
  order         Order          @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId       Int
  product       Product        @relation(fields: [productId], references: [id])
  productId     Int
  variant       ProductVariant @relation(fields: [variantId], references: [id])
  variantId     Int
  nameSnapshot  String
  colorSnapshot String?
  sizeSnapshot  String?
  qty           Int
  unitPriceCent Int
  lineTotalCent Int

  // NEW: costo unitario histórico al momento de la venta
  costSnapshotCent Int @default(0)
}

/**
 * =======================
 * NUEVOS MODELOS CONTAB.
 * =======================
 */

model Supplier {
  id        Int      @id @default(autoincrement())
  name      String
  nit       String?  @unique
  phone     String?
  email     String?
  createdAt DateTime @default(now())

  purchases Purchase[]
}

model Purchase {
  id            Int      @id @default(autoincrement())
  supplier      Supplier @relation(fields: [supplierId], references: [id])
  supplierId    Int
  invoiceNumber String?
  notes         String?

  subtotalCent   Int @default(0) // base sin IVA
  ivaCent        Int @default(0) // IVA descontable (19%)
  retefuenteCent Int @default(0) // si te practicaron retefuente
  totalCent      Int @default(0) // subtotal + iva - retefuente

  createdAt DateTime @default(now())

  items PurchaseItem[]
}

model PurchaseItem {
  id               Int            @id @default(autoincrement())
  purchase         Purchase       @relation(fields: [purchaseId], references: [id], onDelete: Cascade)
  purchaseId       Int
  product          Product        @relation(fields: [productId], references: [id])
  productId        Int
  variant          ProductVariant @relation(fields: [variantId], references: [id])
  variantId        Int
  qty              Int
  unitCostCent     Int            @default(0) // costo unitario compra
  ivaUnitCent      Int            @default(0) // si desglosas IVA unidad
  lineSubtotalCent Int            @default(0) // qty * unitCostCent
}

model Expense {
  id         Int      @id @default(autoincrement())
  category   String // "Nómina", "Arriendo", "Publicidad", etc.
  detail     String?
  amountCent Int      @default(0)
  date       DateTime @default(now())
  createdAt  DateTime @default(now())
}
